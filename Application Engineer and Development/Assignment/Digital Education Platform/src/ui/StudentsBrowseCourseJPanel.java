/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Uni.Course.Course;
import Uni.Course.CourseHistory;
import Uni.Professor.Professor;
import Uni.Student.Student;
import Uni.Uni;
import java.awt.CardLayout;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ingrid
 */
public class StudentsBrowseCourseJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private Student student;
    private Uni uni;
    /**
     * Creates new form StudentsBrowseCourseJPanel
     */
    
    StudentsBrowseCourseJPanel(JPanel workArea,Student student, Uni uni) {
        initComponents();
        this.workArea=workArea;
        this.student=student;
        this.uni=uni;
    }
    
    private void browseCourseTable(){ 
         int selectedRow=tblCourseInfo.getSelectedRow(); 
        
        ArrayList<Course> studentCourses=student.getRegisterCourses();
        String semester=btnSemester.getSelectedItem().toString();
        
        Course existSemesterCourse=uni.courseHistory.findSemesterCourse(semester);
//        int Score=uni.courseHistory.findSemesterCourse(semester).getProfessorRateScore();
        
        
        DefaultTableModel dtm=(DefaultTableModel) tblCourseInfo.getModel();
        dtm.setRowCount(0);
        
        if(existSemesterCourse!=null){
            int Score=0;                
            for(Course c: uni.courseHistory.getCourseHistory()){
                if(c.getSemester().equals(semester)){
                    Object[] row =new Object[6];

//                    row[0]=c.getCourseName();
                    row[0]=c.getCourseID();
                    row[1]=c.getCourseName();
//                  

                    Professor existSemesterProfessor=uni.getProfessorHistory().findSemester(c.getProfessorUserID());
//                    
                    row[2]=existSemesterProfessor.getRegion();
                    row[3]=existSemesterProfessor.getProfessorName();
                    row[4]=existSemesterProfessor.getLanguage();
                    
                    row[5]=getProfessorRate(c.getCourseID());

//                    for(Course cc: studentCourses){
//                        if(cc.getCourseID().equals(c.getCourseID())){
//                            row[5]=cc.getProfessorRateScore();
//                        }
//                        
//                    }               
                    

                    dtm.addRow(row);

                }

            }

        }
        else{
            dtm.setRowCount(0);
            
        }
    } 
    
    private Double getProfessorRate(String courseID){
        
        ArrayList<Student> studentHistory = uni.studentHistory.getStudentHistory();
        CourseHistory courseHistory = uni.getCourseHistory(); 
           
        //Integer rateScore=0;
        Integer  rateCount=0;
        double aveRate=0.00,rateScore=0.00;
        for(Student student : studentHistory){
            ArrayList<Course> registerCourses=student.getRegisterCourses();         

            for(Course c : registerCourses){
                //courseID= c.getCourseID();  
                
                if (c.getCourseID().equals(courseID)){
                    rateScore= rateScore+ c.getProfessorRateScore();   
                   rateCount++;
                }
            }
        }        
        if (rateCount>0){
            
        // Create a DecimalFormat instance to round to two decimal places
        DecimalFormat df = new DecimalFormat("#.##");

        aveRate = rateScore / rateCount;

        // Use the format method to round aveRate to two decimal places
        aveRate = Double.parseDouble(df.format(aveRate));
        }        
        return aveRate;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")                
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSemester = new javax.swing.JComboBox<>();
        btnRegister = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseInfo = new javax.swing.JTable();

        setBackground(new java.awt.Color(205, 237, 253));

        btnSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023Spring", "2023Fall" }));
        btnSemester.setSelectedIndex(-1);
        btnSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSemesterActionPerformed(evt);
            }
        });

        btnRegister.setBackground(new java.awt.Color(237, 163, 90));
        btnRegister.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnRegister.setText("REGISTER COURSE");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(237, 163, 90));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        btnBack.setText("< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("COURSES INFORMATION");

        tblCourseInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "COURSE ID", "NAME", "REGION", "PROFESSOR", "LANGUAGE", "PROFESSOR RATING"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCourseInfo);
        if (tblCourseInfo.getColumnModel().getColumnCount() > 0) {
            tblCourseInfo.getColumnModel().getColumn(0).setResizable(false);
            tblCourseInfo.getColumnModel().getColumn(1).setResizable(false);
            tblCourseInfo.getColumnModel().getColumn(2).setResizable(false);
            tblCourseInfo.getColumnModel().getColumn(3).setResizable(false);
            tblCourseInfo.getColumnModel().getColumn(4).setResizable(false);
            tblCourseInfo.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(btnSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnRegister)
                .addGap(341, 341, 341))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnBack)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSemesterActionPerformed
        // TODO add your handling code here:
        browseCourseTable();
    }//GEN-LAST:event_btnSemesterActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        int selectedRow=tblCourseInfo.getSelectedRow();        
        if(selectedRow>=0){
            String courseID= (String) tblCourseInfo.getValueAt(selectedRow, 0);
            student.newStudentCourse(courseID);
            
            StudentsBrowseListJPanel panel = new StudentsBrowseListJPanel(workArea,student, uni);
            workArea.add("StudentsBrowseListJPanel",panel);
            CardLayout layout = (CardLayout) workArea.getLayout();
            layout.next(workArea);
            
            
            JOptionPane.showMessageDialog(null,"You successfully register the course","Information",JOptionPane.INFORMATION_MESSAGE);

        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row from table first","Warning",JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> btnSemester;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCourseInfo;
    // End of variables declaration//GEN-END:variables
}

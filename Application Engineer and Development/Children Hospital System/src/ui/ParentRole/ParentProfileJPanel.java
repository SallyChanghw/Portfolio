/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ParentRole;

import Hospital.Children.Children;
import Hospital.Hospital;
import Hospital.Organization.PatientOrganization;
import Hospital.Parent.Parent;
import Hospital.Role.ChildrenRole;
import Hospital.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josie
 */
public class ParentProfileJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private PatientOrganization organization;
    private Hospital hospital;
    private UserAccount userAccount;
    private Parent parent;
    private String selectedChildSsnId;
    private String selectedChildName;
    /**
     * Creates new form ProfileJPanel
     */
     public ParentProfileJPanel(JPanel workArea,UserAccount userAccount, PatientOrganization organization, Hospital hospital) {
        initComponents();
        this.workArea = workArea;
        this.organization = organization;
        this.hospital = hospital;
        this.userAccount = userAccount;
        parent=userAccount.getParent();
        
        displayProfile();
        setSize(1500, 1000);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
//        displayMode(true);
//        populateTable();
        populateTable();
    }

     private void displayProfile() {
        txtSSN.setText(parent.getSSNID());
        txtParentName.setText(parent.getName());
        txtUsername.setText(userAccount.getUsername());
        txtPassword.setText(userAccount.getPassword());      
       
    }
//    // update mode: t==false 
    private void displayMode(boolean t) {
        btnSave.setEnabled(!t);
        btnUpdate.setEnabled(t);
        txtSSN.setEditable(false);
        txtParentName.setEditable(false);
        txtUsername.setEnabled(!t);
        txtPassword.setEnabled(!t);    
       
    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblChildrenList.getModel();

        model.setRowCount(0);

        for (Children children : parent.getChildrenList()) {
            Object[] row = new Object[2];
            row[0] = children.getName();
            row[1] = children.getSSNID();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChildrenList = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnAddChildrenConfirm = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtChildrenName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnChiProfile = new javax.swing.JButton();
        txtSSNID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtParentName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnBack1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Profile");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1557, -1));

        tblChildrenList.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        tblChildrenList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Children Name", "Role ID Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChildrenList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChildrenListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChildrenList);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 630, 573, 220));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setText("Role ID Number :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 530, -1, -1));

        btnAddChildrenConfirm.setBackground(new java.awt.Color(102, 153, 255));
        btnAddChildrenConfirm.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnAddChildrenConfirm.setForeground(new java.awt.Color(255, 255, 255));
        btnAddChildrenConfirm.setText("Create");
        btnAddChildrenConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddChildrenConfirmActionPerformed(evt);
            }
        });
        add(btnAddChildrenConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 580, 120, 30));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setText("Children Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 490, -1, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel2.setText("Create & Add to my children");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, -1, -1));

        txtChildrenName.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtChildrenName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChildrenNameActionPerformed(evt);
            }
        });
        add(txtChildrenName, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 490, 173, 30));

        btnDelete.setBackground(new java.awt.Color(255, 51, 0));
        btnDelete.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 710, 90, 40));

        btnSave.setBackground(new java.awt.Color(255, 102, 102));
        btnSave.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 410, 102, 39));

        btnUpdate.setBackground(new java.awt.Color(102, 204, 0));
        btnUpdate.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 410, 102, 39));

        btnChiProfile.setBackground(new java.awt.Color(255, 153, 102));
        btnChiProfile.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnChiProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnChiProfile.setText("Profile");
        btnChiProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiProfileActionPerformed(evt);
            }
        });
        add(btnChiProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 650, 90, 40));

        txtSSNID.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtSSNID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNIDActionPerformed(evt);
            }
        });
        add(txtSSNID, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 530, 173, 30));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setText("Name :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, -1, -1));

        txtParentName.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtParentName.setEnabled(false);
        add(txtParentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 150, 217, 40));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel8.setText("Role ID :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, -1, -1));

        txtSSN.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtSSN.setEnabled(false);
        add(txtSSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, 217, 40));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 280, -1, -1));

        txtUsername.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtUsername.setEnabled(false);
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 270, 217, 40));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 340, -1, -1));

        txtPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtPassword.setEnabled(false);
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 330, 217, 40));

        btnBack1.setBackground(new java.awt.Color(0, 0, 0));
        btnBack1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("< Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, 37));

        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("format : xxx-xx-xxxx, 9 numbers with 2 '-'");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 540, -1, -1));

        jLabel11.setText("Children's username & password are default to be Role ID once created.");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 590, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sweet+Shop+Image+(1).jpeg"))); // NOI18N
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -70, 1500, 1140));
    }// </editor-fold>//GEN-END:initComponents

    private void tblChildrenListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChildrenListMouseClicked
        // TODO add your handling code here:
        int selectedRow = tblChildrenList.getSelectedRow();
        if(selectedRow>=0){
            selectedChildName = (String) tblChildrenList.getValueAt(selectedRow,0);
            selectedChildSsnId = (String) tblChildrenList.getValueAt(selectedRow,1);
        }
    }//GEN-LAST:event_tblChildrenListMouseClicked

    private void btnAddChildrenConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddChildrenConfirmActionPerformed
        // TODO add your handling code here:
        if(txtChildrenName.getText().isEmpty() || txtSSNID.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null, "The information isn't completed! Please check!");
        }  
        else{
            
            String ssn = txtSSNID.getText();
            // Validate Role ID format
            if (!ssn.matches("\\d{3}-\\d{2}-\\d{4}")) {
                // Display a message if SSN is not in the correct form
                JOptionPane.showMessageDialog(this, "Role ID you entered is not in the correct form xxx-xx-xxxx. Please check.", "Error", JOptionPane.ERROR_MESSAGE);
                txtSSNID.setText("");
//                return; // Stop further processing
            }

            // Check if the Role ID already exists
            else if (hospital.existingSSN(ssn) == true) {
                // Display a message if SSN already exists
                JOptionPane.showMessageDialog(this, "Role ID you entered already exists! Please enter another one.", "Error", JOptionPane.ERROR_MESSAGE);
                txtSSNID.setText("");
//                return; // Stop further processing
            }
            else{
    
            parent.newChildren(txtSSNID.getText(),txtChildrenName.getText());
            JOptionPane.showMessageDialog(this, "User account of children has been successfully created! Please click the profile to update your children's detail information.");
            txtChildrenName.setText("");
            txtSSNID.setText("");
            populateTable();
            }

        }

    }//GEN-LAST:event_btnAddChildrenConfirmActionPerformed

    private void txtChildrenNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChildrenNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChildrenNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblChildrenList.getSelectedRow();
        if(selectedRow>=0){            
            for (Children c : parent.getChildrenList()) {
                if(c.isMatchID(selectedChildSsnId)){
                    int response=JOptionPane.showConfirmDialog(null, "Are you sure to delete " + selectedChildName + " ?", "Warning",JOptionPane.OK_OPTION,JOptionPane.WARNING_MESSAGE);
                    if(response==0) {
                        parent.getChildrenList().remove(c);  
                        JOptionPane.showMessageDialog(null,"Child information deleted successfully!");
                        populateTable();
                    }                                  
                }    
            }        
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        String password = txtPassword.getText();
        boolean isValidPassword = password.length() >= 8 &&
                password.matches(".*[a-z].*") &&
                password.matches(".*[A-Z].*") &&
                password.matches(".*\\d.*");
        if(txtUsername.getText().isEmpty() || txtPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "The information isn't completed! Please check!");
            
        }  
        else{
            
            // User Name validation
            String username=txtUsername.getText();            
            if (organization.getUserAccountDirectory().findUserAccount(username) != null && !(userAccount.getUsername().equals(username))) {
                JOptionPane.showMessageDialog(null, "Username already exists! ");
            }             
            if(!isValidPassword) {
                JOptionPane.showMessageDialog(null, "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one digit.");
                txtPassword.setText("");
            }
            else {
                
                userAccount.setPassword(txtPassword.getText());
                userAccount.setUsername(username);
//                displayMode(true);
                JOptionPane.showMessageDialog(null,"User Information updated successfully!");

                txtUsername.setEnabled(false);
                txtPassword.setEnabled(false);
                
                btnSave.setEnabled(false);
                btnUpdate.setEnabled(true);
            } 
        }                   
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
//        displayMode(false);
//        txtUsername.requestFocusInWindow();
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);

        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnChiProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiProfileActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblChildrenList.getSelectedRow();
        if(selectedRow>=0){   
            selectedChildName = (String) tblChildrenList.getValueAt(selectedRow,0);
            selectedChildSsnId = (String) tblChildrenList.getValueAt(selectedRow,1);
            UserAccount account=organization.getUserAccountDirectory().findUserAccountByChildren(selectedChildSsnId);
            if (account == null) {
                Children children=parent.getChildrenById(selectedChildSsnId);
                account = new UserAccount();
                account.setUsername(selectedChildSsnId);
                account.setPassword(selectedChildSsnId);        
                account.setRole(new ChildrenRole());   
                account.setChildren(children);
                organization.getUserAccountDirectory().getUserAccountList().add(account);
            }
            
            ui.ChildrenRole.ChildrenProfileJPanel cpjp = new ui.ChildrenRole.ChildrenProfileJPanel(workArea,account,organization,hospital);
            workArea.add("ProfileJPanel",cpjp);
            CardLayout layout=(CardLayout) workArea.getLayout();
            layout.next(workArea);
        }
    }//GEN-LAST:event_btnChiProfileActionPerformed

    private void txtSSNIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNIDActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddChildrenConfirm;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnChiProfile;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblChildrenList;
    private javax.swing.JTextField txtChildrenName;
    private javax.swing.JTextField txtParentName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtSSNID;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}

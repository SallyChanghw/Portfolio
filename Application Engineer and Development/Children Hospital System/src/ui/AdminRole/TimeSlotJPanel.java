/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AdminRole;

import Hospital.Appointment.Appointment;
import Hospital.Hospital;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author josie
 */
public class TimeSlotJPanel extends javax.swing.JPanel {

    JPanel workArea;
    Hospital hospital;
    /**
     * Creates new form TimeSlotJPanel
     */
    
    public TimeSlotJPanel(JPanel workArea, Hospital hospital) {
        initComponents();
        setSize(1500, 1000);
        this.workArea = workArea;
        this.hospital = hospital; 
        
        populateTable();
        setTableSorter();
    }
    
    public void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblPeak.getModel();
        Map<String, Integer> timeSlotPatientCount = new HashMap<>();

        // Iterate through appointments and update patient count for each time slot
        for (Appointment appointment : hospital.getAppointmentHistory().getAppointmentList()) {
            String timeSlot = appointment.getTimeSlot();
            timeSlotPatientCount.put(timeSlot, timeSlotPatientCount.getOrDefault(timeSlot, 0) + 1);
        }

        // Clear existing rows in the table model
        model.setRowCount(0);

        // Populate the table model with the results
        for (Map.Entry<String, Integer> entry : timeSlotPatientCount.entrySet()) {
            Object[] row = { entry.getKey(), entry.getValue() };
            model.addRow(row);
        }
    }
    
    public void setTableSorter(){
        
        tblPeak.setAutoCreateRowSorter(true);
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(tblPeak.getModel());  
        
        List <RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();  
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.DESCENDING));        
        sorter.setSortKeys(sortKeys);   
        tblPeak.setRowSorter(sorter); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPeak = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, 37));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Helvetica", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Peak Time Slots ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 1510, -1));

        tblPeak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Time Slot", "Number of Patients"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPeak);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 300, -1, 230));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/VWH_Illustration_What-is-a-Fistula_Illustrator_Laura-Porter_No-Text_Final-74dde8ca763c43e8ba76d647ec34b8a0.jpeg"))); // NOI18N
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 1500, 1010));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPeak;
    // End of variables declaration//GEN-END:variables
}

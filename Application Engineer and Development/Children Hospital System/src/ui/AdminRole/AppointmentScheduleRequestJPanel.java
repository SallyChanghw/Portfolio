/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AdminRole;

import Hospital.Appointment.AppointmentSchedule;
import Hospital.Hospital;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josie
 */
public class AppointmentScheduleRequestJPanel extends javax.swing.JPanel {

    JPanel workArea;
    Hospital hospital;
    private String selectedChildrenName;
    private String selectedDoctor;
    private String selectedDepartment;
    private String selectedDate;
    private String selectedTimeSlot;
    /**
     * Creates new form AppointmentScheduleRequestJPanel
     */
    public AppointmentScheduleRequestJPanel(JPanel workArea, Hospital hospital) {
        initComponents();
        setSize(1500, 1000);
        this.workArea = workArea;
        this.hospital = hospital;
        
        populateTable();
    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblScheduleTimeSlot.getModel();

        model.setRowCount(0);

        for (AppointmentSchedule schedule : hospital.getAppointmentHistory().getAppScheduleList()) {
            String status = schedule.getStatus();
                       
            if (status.equals("Pending") ) {
                Object[] row = new Object[6];
                row[0] = schedule.getScheduleDate();
                row[1] = schedule.getTimeSlot();
                row[2] = schedule.getDepartment();
                row[3] = schedule.getDoctorID();
                row[4] = Integer.toString(schedule.getAvailability());
                row[5] = schedule.getStatus();
                //row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();

                model.addRow(row);
            }
        }
    }
    public AppointmentSchedule findAppSchedule(String selDoctorID,String selDepartment,String selDate,String selTimeSlot,String selStatus) {
        for (AppointmentSchedule schedule : hospital.getAppointmentHistory().getAppScheduleList()) {
            String status = schedule.getStatus();
            String department = schedule.getDepartment();
            String doctor = schedule.getDoctorID();
            String scheduleDay = schedule.getScheduleDate();
            String timeSlot = schedule.getTimeSlot();
            
            if (status.equals(selStatus) && selDepartment.equals(department) && selDoctorID.equals(doctor)
                    && selDate.equals(scheduleDay) && selTimeSlot.equals(timeSlot)){
                    return schedule;              
            }            
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblScheduleTimeSlot = new javax.swing.JTable();
        btnApprove = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Appointment Schedule Request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 86, 1494, -1));

        tblScheduleTimeSlot.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        tblScheduleTimeSlot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Time Slots", "Department", "Doctor ID", "Availability", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblScheduleTimeSlot);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 253, 1393, 374));

        btnApprove.setBackground(new java.awt.Color(204, 255, 204));
        btnApprove.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnApprove.setForeground(new java.awt.Color(51, 51, 51));
        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });
        add(btnApprove, new org.netbeans.lib.awtextra.AbsoluteConstraints(1128, 643, 120, 40));

        btnReject.setBackground(new java.awt.Color(255, 204, 204));
        btnReject.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });
        add(btnReject, new org.netbeans.lib.awtextra.AbsoluteConstraints(1308, 643, 120, 40));

        btnBack.setBackground(new java.awt.Color(0, 0, 0));
        btnBack.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, 37));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AS1-1.jpeg"))); // NOI18N
        jLabel2.setToolTipText("");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 410, 1500, 580));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblScheduleTimeSlot.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
        } 
        else{
            selectedDate = (String) tblScheduleTimeSlot.getValueAt(selectedRow,0);
            selectedTimeSlot = (String) tblScheduleTimeSlot.getValueAt(selectedRow,1);
            selectedDepartment = (String) tblScheduleTimeSlot.getValueAt(selectedRow,2);
            selectedDoctor = (String) tblScheduleTimeSlot.getValueAt(selectedRow,3);            
            String status="Pending";
            
            AppointmentSchedule as = this.findAppSchedule(selectedDoctor, selectedDepartment, selectedDate, selectedTimeSlot,status);
            if (as != null) {
                
                as.setStatus("Verified");
            }
           JOptionPane.showMessageDialog(null,"Appointment information updated successfully!");
           populateTable();
        }
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblScheduleTimeSlot.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table first.","Warning",JOptionPane.WARNING_MESSAGE);
        } 
        else{
            selectedDate = (String) tblScheduleTimeSlot.getValueAt(selectedRow,0);
            selectedTimeSlot = (String) tblScheduleTimeSlot.getValueAt(selectedRow,1);
            selectedDepartment = (String) tblScheduleTimeSlot.getValueAt(selectedRow,2);
            selectedDoctor = (String) tblScheduleTimeSlot.getValueAt(selectedRow,3);            
            String status="Pending";
            
            AppointmentSchedule as = this.findAppSchedule(selectedDoctor, selectedDepartment, selectedDate, selectedTimeSlot,status);
            if (as != null) {
                
                as.setStatus("Rejected");
            }
           JOptionPane.showMessageDialog(null,"Appointment information updated successfully!");
           populateTable();
        }
    }//GEN-LAST:event_btnRejectActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblScheduleTimeSlot;
    // End of variables declaration//GEN-END:variables
}

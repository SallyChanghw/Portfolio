/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ManufacturerEnterprise;

import Hospital.Enterprise.Manufacturer;
import Hospital.Hospital;
import Hospital.PurchasingOfficer.PurchasingOfficer;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josie
 */
public class MInventoryJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Hospital hospital;
    Manufacturer m;
    /**
     * Creates new form MaInventoryJPanel
     */
    
    MInventoryJPanel(JPanel userProcessContainer, Hospital hospital, Manufacturer m) {
        initComponents();
        
        setSize(1500, 1000);
        this.userProcessContainer = userProcessContainer;
        this.hospital = hospital;
        this.m = m;
        currentAvailableTable();
    }
    
    
    private void currentAvailableTable(){
        DefaultTableModel dtm=(DefaultTableModel) tblCurrent.getModel();
        dtm.setRowCount(0);
        for(Manufacturer manufacturer:hospital.manufacturerDirectory.getManufacturerDirectory()){
            if(manufacturer.getManufactureName().equals(m.getManufactureName())){
                Object[] row =new Object[2];
                row[0]=manufacturer.getProductName();
                row[1]=manufacturer.getQuantity();
            
                dtm.addRow(row);
                
//                System.out.println(manufacturer.getManufactureName());
//                System.out.println(manufacturer.getProductName());
//                System.out.println(manufacturer.getQuantity());
//                System.out.println("--------------------------");
                
            }
            
        }
    }
    
   public int getQuantity(){
        int remain=m.getQuantity();
        for(PurchasingOfficer purchasingOfficer :hospital.purchasingOfficerHistory.getPurchasingOfficerList()){
//            System.out.println(purchasingOfficer);
            String status=purchasingOfficer.getStatus();

                if(m.getManufactureName().equals(purchasingOfficer.getManufactureName())){
                    if(status=="Approved"){
        //                    System.out.println(purchasingOfficer.getManufactureName());
                        remain=m.getQuantity();
                        remain=remain-purchasingOfficer.getQuantity();
                    }
                }
                
            m.setQuantity(remain);
            
        }
        return remain;
        
//        for(Manufacturer manufacturer:hospital.manufacturerDirectory.getManufacturerDirectory()){
//            if(m.getManufactureName()!=null && m.getManufactureName().equals(manufacturer.getManufactureName())){
//                System.out.println("-----test-------");
//                System.out.println(m.getManufactureName());
//                System.out.println(m.getPassword());
//                System.out.println(m.getQuantity());
               
//                remain=m.getQuantity();
//                for(PurchasingOfficer purchasingOfficer :hospital.purchasingOfficerHistory.getPurchasingOfficerList()){
//                    if(m.getManufactureName()!=null && purchasingOfficer.getProductName()!=null){
//                        if(m.getManufactureName().equals(purchasingOfficer.getManufactureName()) && m.getProductName().equals(purchasingOfficer.getProductName())){
//                            remain=remain-purchasingOfficer.getQuantity();
//                            System.out.println("-----new-------");
//                            System.out.println(purchasingOfficer.getProductName());
//                            System.out.println(remain);
//                            System.out.println("------------");
//                        }
//                        
//                    }
//                }
//                m.setQuantity(remain);
//            }
//                System.out.println(manufacturer.getManufactureName());
//                System.out.println(manufacturer.getProductName());
//                System.out.println(manufacturer.getQuantity());
//                System.out.println("--------------------------");
                
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurrent = new javax.swing.JTable();
        btnBack6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Current Availability");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 220, 1500, -1));

        tblCurrent.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        tblCurrent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Product Name", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCurrent);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 677, -1));

        btnBack6.setBackground(new java.awt.Color(0, 0, 0));
        btnBack6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack6.setForeground(new java.awt.Color(255, 255, 255));
        btnBack6.setText("< Back");
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });
        add(btnBack6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, 37));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loves-data-background.jpeg"))); // NOI18N
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1510, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCurrent;
    // End of variables declaration//GEN-END:variables
}

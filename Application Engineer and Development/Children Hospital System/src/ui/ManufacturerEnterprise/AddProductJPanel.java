/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ManufacturerEnterprise;

import Hospital.Enterprise.Manufacturer;
import Hospital.Hospital;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author josie
 */
public class AddProductJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Hospital hospital;
    Manufacturer m;
    /**
     * Creates new form AddProductJPanel
     */
    AddProductJPanel(JPanel userProcessContainer, Hospital hospital, Manufacturer m) {
        initComponents();
        
        setSize(1500, 1000);
        this.userProcessContainer = userProcessContainer;
        this.hospital = hospital;
        this.m = m;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtProduct = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPerPrice = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnBack6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Product");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-330, 130, 1488, -1));

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel2.setText("Product :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Quantity :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, -1, -1));

        txtProduct.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        txtProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProductActionPerformed(evt);
            }
        });
        add(txtProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 220, 219, 36));

        txtQuantity.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 280, 219, 36));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Price/Per :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, -1, -1));

        txtPerPrice.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        add(txtPerPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 340, 219, 36));

        btnAdd.setBackground(new java.awt.Color(0, 153, 51));
        btnAdd.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, 84, 47));

        btnBack6.setBackground(new java.awt.Color(0, 0, 0));
        btnBack6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack6.setForeground(new java.awt.Color(255, 255, 255));
        btnBack6.setText("< Back");
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });
        add(btnBack6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, 37));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/etactics-inc-aaY0VzXaSiI-unsplash.jpeg"))); // NOI18N
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1510, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void txtProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (txtProduct.getText().isEmpty() || txtQuantity.getText().isEmpty() || txtPerPrice.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The information isn't completed! Please check!");
        } else {
            try {
                int quantity = Integer.parseInt(txtQuantity.getText());
                int price = Integer.parseInt(txtPerPrice.getText());

                String userName = m.getUsername();
                String password = m.getPassword();
                String manufactureName = m.getManufactureName();
                String productName = txtProduct.getText();
                int total = 0;

                boolean manufacturerExists = false;

                for (Manufacturer existedManufacturer : hospital.manufacturerDirectory.getManufacturerDirectory()) {
                    if (manufactureName.equals(existedManufacturer.getManufactureName()) && productName.equals(existedManufacturer.getProductName()) && price == existedManufacturer.getPrice()) {
                        total = existedManufacturer.getQuantity() + quantity;
                        existedManufacturer.setQuantity(total);
                        manufacturerExists = true;
                        JOptionPane.showMessageDialog(null, "You successfully added the quantity of product!");
                        txtProduct.setText("");
                        txtQuantity.setText("");
                        txtPerPrice.setText("");
                    }
                    else if(manufactureName.equals(existedManufacturer.getManufactureName()) && productName.equals(existedManufacturer.getProductName()) && price != existedManufacturer.getPrice()){
                        manufacturerExists = true;
                        JOptionPane.showMessageDialog(null, "Product is already existed! But the price you enter is not consistent.");
                        txtPerPrice.setText("");
                    }
                }

                if (!manufacturerExists) {
                    hospital.manufacturerDirectory.addManufacturer(userName, password, manufactureName, productName, quantity, price);
                    JOptionPane.showMessageDialog(null, "You successfully added the product!");
                    txtProduct.setText("");
                    txtQuantity.setText("");
                    txtPerPrice.setText("");
                }

//                JOptionPane.showMessageDialog(null, "You successfully added the product!");

//                txtProduct.setText("");
//                txtQuantity.setText("");
//                txtPerPrice.setText("");
            } catch (NumberFormatException e) {
                // Handle the case where one of the fields is not a number
                if (!isNumeric(txtQuantity.getText())) {
                    txtQuantity.setText("");
                }
                if (!isNumeric(txtPerPrice.getText())) {
                    txtPerPrice.setText("");
                }

                JOptionPane.showMessageDialog(this, "Please enter numbers in the quantity and price areas!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Helper method to check if a string is numeric
    private boolean isNumeric(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtPerPrice;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}

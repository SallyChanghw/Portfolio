/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ChildrenRole;

import Hospital.Appointment.Appointment;
import Hospital.Children.Children;
import Hospital.Hospital;
import Hospital.Organization.PatientOrganization;
import Hospital.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author josie
 */
public class AppointmentHistoryJPanel extends javax.swing.JPanel {
    private JPanel workArea;
    private PatientOrganization organization;
    private Hospital hospital;
    private UserAccount userAccount;
    private Children children;
    /**
     * Creates new form AppointmentHistoryJPanel
     */
    public AppointmentHistoryJPanel(JPanel workArea, UserAccount account, PatientOrganization organization, Hospital hospital) {
        initComponents();
        this.workArea = workArea;
        this.organization = organization;
        this.hospital = hospital;
        this.userAccount = account;
        children=userAccount.getChildren();
        
        setSize(1500, 1000);
        populateTable(); 
    }


    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblAppHistory.getModel();

        model.setRowCount(0);

        for (Appointment ap : hospital.getAppointmentHistory().getAppointmentList()) {
            String childName = ap.getChildName();
            if (childName.equals(children.getName())) {
                 Object[] row = new Object[6];
                row[0] = ap.getAppointmentDate();
                row[1] = ap.getDepartment();
                row[2] = hospital.getDoctorHistory().findDoctor(ap.getDoctorID()).getName() ;
                row[3] = ap.getMedicine();
                row[4] = ap.getDescription();
                row[5] = ap.getStatus();
                model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppHistory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnBack1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAppHistory.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        tblAppHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Department", "Doctor", "Medicine", "Description", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAppHistory);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 243, 1390, 504));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Appointment History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 119, 1494, -1));

        btnBack1.setBackground(new java.awt.Color(0, 0, 0));
        btnBack1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack1.setForeground(new java.awt.Color(255, 255, 255));
        btnBack1.setText("< Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });
        add(btnBack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, 37));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pattern.png"))); // NOI18N
        jLabel2.setToolTipText("");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 1500, 1000));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_btnBack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAppHistory;
    // End of variables declaration//GEN-END:variables
}

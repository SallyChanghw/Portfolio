/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.DoctorRole;

import Hospital.Enterprise.Manufacturer;
import Hospital.Hospital;
import Hospital.Organization.Organization;
import Hospital.Organization.StaffOrganization;
import Hospital.PurchasingOfficer.PurchasingOfficer;
import Hospital.UserAccount.UserAccount;
import Hospital.WorkQueue.PurchaseRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author josie
 */
public class RequestPurchaseJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Hospital hospital;
    UserAccount userAccount;
    /**
     * Creates new form RequestPurchaseJPanel
     */

    RequestPurchaseJPanel(JPanel userProcessContainer, Hospital hospital, UserAccount account) {
        initComponents();
        
        setSize(1500, 1000);
        this.userProcessContainer = userProcessContainer;
        this.hospital = hospital;
        this.userAccount = account;
        
        comboBox();
    }
    
    public void comboBox(){
        for(Manufacturer manufacturer:hospital.manufacturerDirectory.getManufacturerDirectory()){
            if(manufacturer.getManufactureName()!=null){
                String manufacturerName = manufacturer.getManufactureName();

                // Check if the manufacturerName is already present in the combobox
                boolean manufacturerExists = false;
                for (int i = 0; i < cboxManufacturer.getItemCount(); i++) {
                    if (manufacturerName.equals(cboxManufacturer.getItemAt(i))) {
                        manufacturerExists = true;
                        break;
                    }
                }

                // If the manufacturerName is not present, add it to the combobox
                if (!manufacturerExists) {
                    cboxManufacturer.addItem(manufacturerName);
                }
            }    
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboxManufacturer = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboxProduct = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(248, 248, 240));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Purchase Form");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 112, 1488, -1));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setText("Manufacturer :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(568, 209, -1, -1));

        cboxManufacturer.setToolTipText("");
        cboxManufacturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxManufacturerActionPerformed(evt);
            }
        });
        add(cboxManufacturer, new org.netbeans.lib.awtextra.AbsoluteConstraints(711, 202, 190, 40));

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Product Name :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(561, 283, -1, -1));

        cboxProduct.setEnabled(false);
        cboxProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxProductActionPerformed(evt);
            }
        });
        add(cboxProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(711, 276, 270, 40));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("Quantity :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(611, 354, -1, -1));

        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(711, 348, 124, 40));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setText("Message :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(606, 422, -1, -1));

        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });
        add(txtMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(711, 416, 550, 90));

        btnSubmit.setBackground(new java.awt.Color(0, 153, 51));
        btnSubmit.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit Request");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 550, 183, 54));

        btnBack6.setBackground(new java.awt.Color(0, 0, 0));
        btnBack6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        btnBack6.setForeground(new java.awt.Color(255, 255, 255));
        btnBack6.setText("< Back");
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });
        add(btnBack6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, 37));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/macro-purchase-order-with-pencil-EK5XPD.jpeg"))); // NOI18N
        jLabel9.setToolTipText("");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (cboxManufacturer.getSelectedIndex()==-1 || cboxProduct.getSelectedIndex() == -1 || txtQuantity.getText().isEmpty() || txtMessage.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "The purchase information isn't completed! Please check!");
        }
        
        else {
            // Check if txtQuantity is a valid integer
            try {
                int temporary = Integer.parseInt(txtQuantity.getText());

                for (Manufacturer manufacturer : hospital.manufacturerDirectory.getManufacturerDirectory()) {
                    if (cboxManufacturer.getSelectedItem().toString().equals(manufacturer.getManufactureName()) && cboxProduct.getSelectedItem().toString().equals(manufacturer.getProductName())) {
                        int manuQuantity = manufacturer.getQuantity();

                        if (temporary > manuQuantity) {
                            JOptionPane.showMessageDialog(null, "The product quantity is not sufficient. Please check!");
                            txtQuantity.setText("");
                        } else {
                            PurchasingOfficer purchasingofficer = hospital.purchasingOfficerHistory.addPurchasingRequest();

                            LocalDateTime currentDateTime = LocalDateTime.now();
                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                            String formattedDateTime = currentDateTime.format(formatter);
                            String status = "Pending";
                            String doctorName = userAccount.getDoctor().getName();

                            purchasingofficer.setDate(formattedDateTime);
                            purchasingofficer.setManufactureName(cboxManufacturer.getSelectedItem().toString());
                            purchasingofficer.setProductName(cboxProduct.getSelectedItem().toString());
                            purchasingofficer.setQuantity(Integer.parseInt(txtQuantity.getText()));
                            purchasingofficer.setPrice(manufacturer.getPrice());
                            purchasingofficer.setMessage(txtMessage.getText());
                            purchasingofficer.setStatus(status);
                            purchasingofficer.setDoctorName(doctorName);

                            cboxManufacturer.setSelectedIndex(-1);
                            cboxProduct.setSelectedIndex(-1);
                            cboxProduct.setEnabled(false);
                            txtQuantity.setText("");
                            txtMessage.setText("");

                            JOptionPane.showMessageDialog(null, "You successfully made a purchase request. Please wait for the purchasing officer to verify and the admin to approve.");
                        }
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Please enter a number in the quantity area!", "Error", JOptionPane.ERROR_MESSAGE);
                txtQuantity.setText("");
            }
        }

        
        
        
//        String message = txtMessage.getText();
//        if(message.equals("") || message.isEmpty()){
//            JOptionPane.showMessageDialog(null, "Please enter something to send.");
//            return;
//        }
//        PurchaseRequest request = new PurchaseRequest();
//        request.setMessage(message);
//        request.setSender(userAccount);
//        request.setStatus("Pending");
//        
//        Organization org = null;
//        for (Organization organization : hospital.getOrganizationDirectory().getOrganizationList()){
//            if (organization instanceof StaffOrganization){
//                org = organization;
//                break;
//            }
//        }
//        if (org!=null){
//            org.getWorkQueue().getWorkRequestList().add(request);
//            userAccount.getWorkQueue().getWorkRequestList().add(request);
//        }
//        JOptionPane.showMessageDialog(null, "Purchase Request message sent!");
//        txtMessage.setText("");
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cboxProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxProductActionPerformed

    private void cboxManufacturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxManufacturerActionPerformed
        // TODO add your handling code here:
        if(cboxManufacturer.getSelectedIndex() != -1){
            cboxProduct.setEnabled(true);
            cboxProduct.removeAllItems();
            String selectManufacturer=cboxManufacturer.getSelectedItem().toString();
            for(Manufacturer manufacturer:hospital.manufacturerDirectory.getManufacturerDirectory()){
                if(selectManufacturer.equals(manufacturer.getManufactureName())){
                    cboxProduct.addItem(manufacturer.getProductName());
                }
            }
        }
    }//GEN-LAST:event_cboxManufacturerActionPerformed

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DInventoryJPanel dijp = (DInventoryJPanel) component;
//        dijp.populatePurchaseRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack6;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboxManufacturer;
    private javax.swing.JComboBox<String> cboxProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
